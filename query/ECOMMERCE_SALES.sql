-- Explore all objects in the database
SELECT * FROM INFORMATION_SCHEMA.TABLES;

-- Explore all columns in the database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME='DIM_CUSTOMERS'; 


-- Explore all countries our customers come from
SELECT DISTINCT COUNTRY 
FROM DIM_CUSTOMERS; 

-- Explore all categories of products
SELECT DISTINCT CATEGORY FROM DIM_PRODUCTS;

SELECT DISTINCT CATEGORY ,SUBCATEGORY,PRODUCT_NAME FROM DIM_PRODUCTS
ORDER BY 1,2,3;

-- Find the first and last order date
SELECT MIN(ORDER_DATE) AS FIRST_ORDER_DATE,MAX(ORDER_DATE) AS LAST_ORDER_DATE
FROM FACT_SALES;

-- Find  the youngest and oldest customer
SELECT MIN(BIRTHDATE) AS OLDEST_BIRTHDATE,
TIMESTAMPDIFF(YEAR, MIN(BIRTHDATE), CURDATE()) AS OLDEST_AGE,
MAX(BIRTHDATE) AS YOUNGEST_BIRTHDATE,
TIMESTAMPDIFF(YEAR, MAX(BIRTHDATE), CURDATE()) AS YOUNGEST_AGE
FROM (SELECT DISTINCT BIRTHDATE FROM DIM_CUSTOMERS
WHERE NOT BIRTHDATE='') AS A;  


-- GENERATE A REPORT THAT SHOWS ALL  KEY METRICS  OF THE BUSINESSS
SELECT 'TOTAL_SALES' AS MEASURE_NAME, SUM(SALES_AMOUNT) AS MEASURE_VALUES FROM FACT_SALES
UNION ALL
SELECT 'TOTAL_QUANTITY' AS MEASURE_NAME,SUM(QUANTITY) AS MEASURE_VALUES  FROM FACT_SALES
UNION ALL
SELECT 'AVERAGE_SELLING_PRICE' AS MEASURE_NAME,ROUND(AVG(PRICE),0) AS MEASURE_VALUES FROM FACT_SALES
UNION ALL
SELECT 'TOTAL_ORDERS' AS MEASURE_NAME,COUNT(DISTINCT ORDER_NUMBER) AS MEASURE_VALUES FROM FACT_SALES
UNION ALL
SELECT 'TOTAL_PRODUCTS' AS MEASURE_NAME,COUNT(DISTINCT PRODUCT_NAME) AS MEASURE_VALUES FROM DIM_PRODUCTS
UNION ALL
SELECT 'TOTAL_REGISTER_CUSTOMERS' AS MEASURE_NAME,COUNT(CUSTOMER_KEY) AS MEASURE_VALUES FROM DIM_CUSTOMERS
UNION ALL
SELECT 'TOTAL_ORDER_CUSTOMERS' AS MEASURE_NAME,COUNT(DISTINCT CUSTOMER_KEY) AS MEASURE_VALUES FROM FACT_SALES;



-- Find the total customers by countries
SELECT COUNTRY,COUNT(CUSTOMER_ID) AS TOTAL_CUSTOMERS
FROM DIM_CUSTOMERS
GROUP BY COUNTRY
ORDER BY 2 DESC;

-- Find the total customers by gender
SELECT GENDER,COUNT(CUSTOMER_ID) AS TOTAL_CUSTOMERS 
FROM DIM_CUSTOMERS
GROUP BY GENDER; 

-- Find total products by category
SELECT CATEGORY,COUNT(PRODUCT_KEY) AS TOTAL_PRODUCTS
FROM DIM_PRODUCTS
GROUP BY CATEGORY
ORDER BY 2 DESC;

-- Find average cost in each categoy
SELECT CATEGORY,
AVG(COST) AS AVG_COST
FROM DIM_PRODUCTS
GROUP BY CATEGORY
ORDER BY 2 DESC;

-- Find total revenue generated for each category

SELECT P.CATEGORY,SUM(F.SALES_AMOUNT) AS TOTAL_REVENUE
FROM FACT_SALES AS F LEFT JOIN DIM_PRODUCTS AS P
ON F.PRODUCT_KEY=P.PRODUCT_KEY
GROUP BY P.CATEGORY
ORDER BY 2 DESC;

-- What is the distribution of item sold across country
SELECT C.COUNTRY,SUM(F.QUANTITY) AS TOTAL_SOLD_ITEMS
FROM FACT_SALES AS F LEFT JOIN DIM_CUSTOMERS AS C
ON F.CUSTOMER_KEY=C.CUSTOMER_KEY
GROUP BY C.COUNTRY
ORDER BY  2 DESC;

-- Find the total revenue generated by each customer
SELECT C.CUSTOMER_KEY,C.FIRST_NAME,C.LAST_NAME,SUM(F.SALES_AMOUNT) AS TOTAL_REVENUE
FROM FACT_SALES AS F LEFT JOIN DIM_CUSTOMERS AS C
ON F.CUSTOMER_KEY=C.CUSTOMER_KEY
GROUP BY C.CUSTOMER_KEY,C.FIRST_NAME,C.LAST_NAME
ORDER BY 4 DESC;


-- Which  5 products generate highest revenue
SELECT P.PRODUCT_NAME ,SUM(F.SALES_AMOUNT) AS TOTAL_REVENUE
FROM FACT_SALES AS F LEFT JOIN DIM_PRODUCTS AS P ON F.PRODUCT_KEY=P.PRODUCT_KEY
GROUP BY P.PRODUCT_NAME
ORDER BY 2 DESC
LIMIT 5;

-- Which  5 products generate worst revenue
SELECT *
FROM(SELECT P.PRODUCT_NAME ,SUM(F.SALES_AMOUNT) AS TOTAL_REVENUE,RANK() OVER(ORDER BY SUM(F.SALES_AMOUNT)) AS PRODUCT_RANK
FROM FACT_SALES AS F LEFT JOIN DIM_PRODUCTS AS P ON F.PRODUCT_KEY=P.PRODUCT_KEY
GROUP BY P.PRODUCT_NAME) AS A
WHERE PRODUCT_RANK<=5;

